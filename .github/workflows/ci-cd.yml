name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write

jobs:
  test_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run test:ci
      - run: npm run build

  deploy:
    needs: test_build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Smoke check Vercel secrets
        run: |
          [ -n "$VERCEL_TOKEN" ] || (echo "VERCEL_TOKEN missing" && exit 1)
          [ -n "$VERCEL_ORG_ID" ] || (echo "VERCEL_ORG_ID missing" && exit 1)
          [ -n "$VERCEL_PROJECT_ID" ] || (echo "VERCEL_PROJECT_ID missing" && exit 1)

      - run: npm i -g vercel@latest
      - name: Verify auth
        run: vercel whoami --token="$VERCEL_TOKEN"

      - name: Pull env (prod)
        run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN" --scope="$VERCEL_ORG_ID"

      - name: Build with Vercel
        run: vercel build --prod --token="$VERCEL_TOKEN" --scope="$VERCEL_ORG_ID"

      - name: Deploy prebuilt to Production
        run: vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN" --scope="$VERCEL_ORG_ID"

